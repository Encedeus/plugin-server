// Code generated by ent, DO NOT EDIT.

package ent

import (
	"PluginServer/ent/plugin"
	"PluginServer/ent/schema"
	"PluginServer/ent/user"
	"PluginServer/ent/verifysession"
	"time"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	pluginFields := schema.Plugin{}.Fields()
	_ = pluginFields
	// pluginDescCreatedAt is the schema descriptor for created_at field.
	pluginDescCreatedAt := pluginFields[0].Descriptor()
	// plugin.DefaultCreatedAt holds the default value on creation for the created_at field.
	plugin.DefaultCreatedAt = pluginDescCreatedAt.Default.(func() time.Time)
	// pluginDescUpdatedAt is the schema descriptor for updated_at field.
	pluginDescUpdatedAt := pluginFields[1].Descriptor()
	// plugin.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	plugin.DefaultUpdatedAt = pluginDescUpdatedAt.Default.(func() time.Time)
	// plugin.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	plugin.UpdateDefaultUpdatedAt = pluginDescUpdatedAt.UpdateDefault.(func() time.Time)
	// pluginDescName is the schema descriptor for name field.
	pluginDescName := pluginFields[2].Descriptor()
	// plugin.NameValidator is a validator for the "name" field. It is called by the builders before save.
	plugin.NameValidator = pluginDescName.Validators[0].(func(string) error)
	// pluginDescDescription is the schema descriptor for description field.
	pluginDescDescription := pluginFields[3].Descriptor()
	// plugin.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	plugin.DescriptionValidator = pluginDescDescription.Validators[0].(func(string) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUUID is the schema descriptor for uuid field.
	userDescUUID := userFields[0].Descriptor()
	// user.DefaultUUID holds the default value on creation for the uuid field.
	user.DefaultUUID = userDescUUID.Default.(func() uuid.UUID)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[1].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[2].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescAuthUpdatedAt is the schema descriptor for auth_updated_at field.
	userDescAuthUpdatedAt := userFields[4].Descriptor()
	// user.DefaultAuthUpdatedAt holds the default value on creation for the auth_updated_at field.
	user.DefaultAuthUpdatedAt = userDescAuthUpdatedAt.Default.(func() time.Time)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[5].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[6].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescVerified is the schema descriptor for verified field.
	userDescVerified := userFields[8].Descriptor()
	// user.DefaultVerified holds the default value on creation for the verified field.
	user.DefaultVerified = userDescVerified.Default.(bool)
	verifysessionFields := schema.VerifySession{}.Fields()
	_ = verifysessionFields
	// verifysessionDescSid is the schema descriptor for sid field.
	verifysessionDescSid := verifysessionFields[0].Descriptor()
	// verifysession.DefaultSid holds the default value on creation for the sid field.
	verifysession.DefaultSid = verifysessionDescSid.Default.(func() uuid.UUID)
}
